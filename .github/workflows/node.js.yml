# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-publish:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    container: node:14.7.0
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
    - name: checkout repository code
      uses: actions/checkout@v2
    - name: install dependencies
      run: npm install
    - name: configure variables
      run: |
        sed -i -e "s|forum_api_dev|postgres|g" .env && \
        sed -i -e "s|devel|postgres|g" .env && \
        sed -i -e "s|secret|postgres|g" .env
    - name: setup database
      run: npm run migrate:latest
      env:
        PGHOST: postgres
    - name: do functional test
      run: npm test -- --detectOpenHandles --forceExit
      env:
        PGHOST: postgres
        NODE_ENV: test
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  test:
    needs: build-and-publish
    runs-on: ubuntu-latest
    container: node:14.7.0
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - name: checkout repository code
      uses: actions/checkout@v2
    - name: install dependencies
      run: npm install
    - name: configure variables
      run: |
        sed -i -e "s|forum_api_dev|postgres|g" .env && \
        sed -i -e "s|devel|postgres|g" .env && \
        sed -i -e "s|secret|postgres|g" .env
    - name: setup database
      run: npm run migrate:latest
      env:
        PGHOST: postgres
    - name: run postman
      run: npm run test:postman
    - name: do functional test
      run: npm test -- --detectOpenHandles --forceExit
      env:
        PGHOST: postgres
        NODE_ENV: test
